;  IRL FlowCode Version: Version 10.0
;  c1995-2015: Visual Flow Coder by 2LResearch
;
;  File Name : COBOL.cbl.vfc
;  File Date : 10:56:03 PM - 16:Jul:2025

branch();//
path( IDENTIFICATION DIVISION. );//
set();// * THIS IS A SAMPLE PROGRAM USED TO * 
set();// * DEMONSTRATE FEATURES OF THE COBOL * 
set();// * LANGUAGE THAT ARE SUPPORTED IN * 
set();// * Deskware COBOL Intepreter - Alpha * 
set();// * release 0.000 * 

input( PROGRAM-ID. SAMPLE1.CBL );// 
set( AUTHOR. DESKWARE. );// 
path( ENVIRONMENT DIVISION. );//
set();// * THIS PROGRAM WAS SUCCESSFULLY * 
set();// * TESTED UNDER DOS, WINDOWS NT, AND * 
set();// * LINUX. * 
event( CONFIGURATION SECTION. );//
set( SOURCE COMPUTER. 486. );// 
set( OBJECT COMPUTER. 486. );// 
path( DATA DIVISION. );//
set();// * SAMPLE1.IN IS USED AS AN INPUT FILE* 
set();// * AND SAMPLE1.OUT IS USED AS AN * 
set();// * OUTPUT FILE. * 
event( FILE SECTION. );//
set( FD SAMPLE1.IN RECORD IS 128 BYTES. );// 
set( FD SAMPLE1.OUT RECORD IS 128 BYTES. );// 
set();// * VARIABLE DECLARATIONS * 
event( WORKING-STORAGE SECTION. );//
set( 01 WS-VAR-2. );// 
set( 05 WS-VAR21 PIC XXXXXXXXXXXXXXXXXXXXXXXXXXXXX. );// 
set( 05 WS-VAR23. );// 
set( 10 WS-TEST1 PIC X. );// 
set( 10 WS-TEST2 PIC X. );// 
set( 01 WS-EOF PIC X. );// 
set( 01 WS-YES PIC X. );// 
set( 01 WS-NO PIC X. );// 
set( 01 WS-INPUT-RECORD. );// 
set( 05 WS-INPUT1 PIC XXXX. );// 
set( 05 WS-INPUT2 PIC XXXX. );// 
set( 05 WS-INPUT3 PIC XXXX. );// 
set( 05 WS-INPUT4 PIC XXXX. );// 
set( 01 WS-OUTPUT-RECORD. );// 
set( 05 WS-OUTPUT1 PIC XXXX. );// 
set( 05 WS-OUTPUT2 PIC XXXXXX. );// 
path( PROCEDURE DIVISION. );//
set();// * MODULE: * 
set();// * 0000-MAIN * 
set();// * DESCRIPTION: * 
set();// * THIS IS THE MAIN DRIVER MODULE * 
set();// * FOR THIS SAMPLE PROGRAM. * 

input( 0000-MAIN. );//
set(  MOVE "N" TO WS-EOF.);// MOVE "Y" TO WS-EOF.
set(  MOVE "Y" TO WS-YES.);// MOVE "n" TO WS-YES.
set( MOVE "T" TO WS-TEST1.);//  MOVE "X" TO WS-TEST1. 
set( MOVE "Y" TO WS-TEST2. );// 
branch(  IF WS-YES = "Y" THEN);// IF WS-YES = "N" THEN
path();// 
process( DISPLAY "WS-YES is equal to Y" );//
branch( IF WS-EOF = "Y" THEN );// 
path();// 
process( DISPLAY "WS-EOF is equal to Y" );//
path( ELSE );// 
process( DISPLAY "WS-EOF is not equal to Y" );//
branch( IF WS-TEST1 = "X" THEN );// 
path();// 
process( DISPLAY "WS-TEST1 is equal to X" );//
path(ELSE   );//
process( DISPLAY "WS-TEST1 is NOT equal to X");//
bend( ENDIF );//
bend( ENDIF );//
path( ELSE );// 
process( DISPLAY "WS-YES is not equal to Y" );//
bend( ENDIF. );//
process( PERFORM 1000-CREATE-SAMPLE-DATA. );//
output( OPEN SAMPLE1.IN FOR READING DELIMITED WITH "," AT END MOVE WS-YES TO WS-EOF. );// 
output( OPEN SAMPLE1.OUT FOR WRITING );// 
process( PERFORM 1500-READ-INPUT-RECORD.);//
output( PERFORM 2000-WRITE-OUTPUT-RECORD UNTIL WS-EOF = WS-YES. );// 
process( PERFORM 3000-CLOSE-FILES. );//
end( GOBACK. );//
set();// * MODULE: * 
set();// * 1000-CREATE-SAMPLE-DATA * 
set();// * DESCRIPTION: * 
set();// * CREATE THE TEST DATA THAT IS * 
set();// * USED TO DEMONSTRATE THE * 
set();// * DELIMITED FEATURE OF THE OPEN * 
set();// * COMMAND. * 

input( 1000-CREATE-SAMPLE-DATA. );//
set( DISPLAY "Create the sample data". );// 
output( OPEN SAMPLE1.IN FOR WRITING. );// 
output( WRITE "1234" TO SAMPLE1.IN );// 
output( WRITE "1234,567890,ab,cdefghij,klmnop" TO SAMPLE1.IN );// 
set( CLOSE SAMPLE1.IN );// 
set( DISPLAY "Sample data has been created!!!".);// 
end();//
set();// * MODULE: * 
set();// * 1000-READ-INPUT-RECORD * 
set();// * DESCRIPTION: * 
set();// * READS RECORD FROM THE INPUT FILE * 

input( 1500-READ-INPUT-RECORD.);//
set( READ SAMPLE1.IN INTO WS-INPUT-RECORD. );// 
set( PERFORM 9000-DISPLAY-INPUT-RECORD. );// 
end();//
set();// * MODULE: * 
set();// * 2000-WRITE-OUTPUT-RECORD * 
set();// * DESCRIPTION: * 
set();// * WRITES THE OUTPUT RECORD TO * 
set();// * SAMPLE1.OUT * 

input( 2000-WRITE-OUTPUT-RECORD. );//
set( MOVE WS-INPUT-RECORD TO WS-OUTPUT-RECORD. );// 
output( WRITE WS-OUTPUT-RECORD TO SAMPLE1.OUT );// 
set( PERFORM 1500-READ-INPUT-RECORD.);// 
end();//
set();// * MODULE: * 
set();// * 3000-CLOSE-FILES * 
set();// * DESCRIPTION: * 
set();// * CLOSES ALL THE FILES THAT ARE * 
set();// * USED BY THIS PROGRAM. * 

input( 3000-CLOSE-FILES. );//
set( CLOSE SAMPLE1.IN );// 
set( CLOSE SAMPLE1.OUT );// 
end();//
set();// * MODULE: * 
set();// * 9000-DISPLAY-INPUT-RECORD * 
set();// * DESCRIPTION: * 
set();// * JUST DISPLAYS A VARIABLE * 

input( 9000-DISPLAY-INPUT-RECORD. );//
set( DISPLAY WS-INPUT-RECORD. );// 
end();//
bend();//
end();//



;INSECTA EMBEDDED SESSION INFORMATION
; 0 13158600 0 0 13158600 65280 33023 0 0 0 16777088 65535 15360
;    SAMPLE1.cbl   #   .
; "C:\Program
;INSECTA EMBEDDED ALTSESSION INFORMATION
; 178 250 2146 1095 29 83   219   152    COBAL.key  0